// ブレイクポイント=============================================
// ===========================================================
$pc_l: 1280px; // 1280px〜  外部モニタ
$pc: 1279px; // ~1279px  ノートPC
$tab: 1024px; // ~1024px  タブレット
$sp_b: 599px; // ~599px  スマホ横beside
$sp_V: 479px; // ~479px  スマホ縦vertical
// ブレイクポイント=============================================
// ===========================================================

@mixin pc-l($pcl) {

  /* 1920px 以上 */
  @media (min-width: ($pcl)) {
    @content;
  }
}

// ===========================================================
@mixin pc($pc) {

  /* $** pxを含まずそれより小さい */
  @media not all and (min-width: ($pc)) {
    @content;
  }
}

// ===========================================================
@mixin tab($tab) {

  /* $** pxを含まずそれより小さい */
  @media not all and (min-width: ($tab)) {
    @content;
  }
}

// ===========================================================
@mixin sp_b($sp_b) {

  /* $** pxを含まずそれより小さい */
  @media not all and (min-width: ($sp_b)) {
    @content;
  }
}

// ===========================================================
@mixin sp_v($sp_v) {

  /* $** pxを含まずそれより小さい */
  @media not all and (min-width: ($sp_v)) {
    @content;
  }
}


//レスポンシブ PC =============================================
// ===========================================================
@function clamp_vw_pc($num) {
  $minWidth: 1025;
  $maxWidth: 1919;
  $val_max: $num * 1px;
  $val_vw: round(calc($num / $maxWidth) * 100);
  $val_min: round($minWidth * calc($val_vw / 100)) * 1px;
  @return clamp(#{$val_min}, #{$val_vw * 1vw}, #{$val_max});
}

//レスポンシブ TAB =============================================
// ===========================================================
@function clamp_vw_tab($num) {
  $minWidth: 600;
  $maxWidth: 1024;
  $val_max: $num * 1px;
  $val_vw: round(calc($num / $maxWidth) * 100);
  $val_min: round($minWidth * calc($val_vw / 100)) * 1px;
  @return clamp(#{$val_min}, #{$val_vw * 1vw}, #{$val_max});
}

//レスポンシブ SP-B =============================================
// ===========================================================
@function clamp_vw_sp_b($num) {
  $minWidth: 480;
  $maxWidth: 599;
  $val_max: $num * 1px;
  $val_vw: round(calc($num / $maxWidth) * 100);
  $val_min: round($minWidth * calc($val_vw / 100)) * 1px;
  @return clamp(#{$val_min}, #{$val_vw * 1vw}, #{$val_max});
}

//レスポンシブ SP-V =============================================
// ===========================================================
@function clamp_vw_sp_v($num) {
  // (350)
  $minWidth: 375;
  $maxWidth: 479;
  $val_max: $num * 1px;
  $val_vw: round(calc($num / $maxWidth) * 100); // (350÷479)✖︎100=73
  $val_min: round($minWidth * calc($val_vw / 100)) * 1px; // 375×(73÷100)=273
  @return clamp(#{$val_min}, #{$val_vw * 1vw}, #{$val_max}); //clamp( 273px, 73vw, 350px)
}

// ===========================================================
// ===========================================================



// 可変フォント pc 1024~1919
// ===========================================================
// ===========================================================
@function variableFontPc($fontMax, $fontMin) {
  $maxPx: $fontMax ;
  $minPx:  $fontMin ;
  $viewMin: calc(1024 / 100)+px;
  $fontDiff: calc($maxPx - $minPx);
  $viewDiff: calc(1919 - 1024);
  $ratio: calc(($fontDiff / $viewDiff) *100);

  @return calc(#{$minPx}px  + ((1vw - #{$viewMin}) ) * #{$ratio}) ;
}

// $min:指定したい文字サイズの最小値
// $viewMin:10.24;（文字サイズの最大値と最小値の差）/（ビューポートの最大値と最小値の差）×100
// $ratio:(文字サイズの最大値と最小値の差）/（ビューポートの最大値と最小値の差）×100

// 1024〜1919 28~20
// font-size: calc(X + ((1vw - Y) * Z));
// font-size: calc(20px + ((1vw - 10.24px) * 0.89));
// X…指定したい文字サイズの最小値  20
// Y…指定したいビューポートの最小値/100  1024/100=10.24
// Z…（文字サイズの最大値と最小値の差）/（ビューポートの最大値と最小値の差）×100
// 28-20=8 / 1919-1024=895 *100= 0.89
// ===========================================================
// ===========================================================